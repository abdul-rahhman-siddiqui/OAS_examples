openapi: 3.0.0
paths:
  /api/v1/performance-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
      tags:
        - Performance Service
      security:
        - JWT: []
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          description: >-
            Unique identifier (MongoDB ObjectId) of the application/API record
            to update. This ID is required to specify which application record
            should be modified with the provided update data. The update
            operation can modify configuration settings, authentication details,
            performance policies, testing parameters, and other application
            metadata while preserving the execution history and existing
            relationships.
          example: 507f1f77bcf86cd799439011
          schema:
            pattern: ^[0-9a-fA-F]{24}$
            minLength: 24
            maxLength: 24
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
      tags:
        - Performance Service
      security:
        - JWT: []
    get:
      operationId: AppsController_GetApp
      summary: Retrieve Application Details
      description: >-
        Fetches detailed information about a specific application/API including
        its configuration, latest run status, performance metrics, and metadata.
        The response includes comprehensive data about the application's testing
        history, current status, and all associated settings.
      parameters:
        - name: id
          required: true
          in: query
          description: >-
            Unique identifier (MongoDB ObjectId) of the application/API record
            to retrieve. This parameter is essential for identifying the
            specific application/API whose performance data, configuration, and
            metadata should be returned. The ID must be a valid 24-character
            hexadecimal string representing a MongoDB ObjectId. Used primarily
            for retrieving detailed information about a registered API including
            its latest run status, performance metrics, and configuration
            settings.
          example: 507f1f77bcf86cd799439011
          schema:
            pattern: ^[0-9a-fA-F]{24}$
            minLength: 24
            maxLength: 24
      responses:
        '200':
          description: Application details retrieved successfully
        '404':
          description: Application not found with the provided ID
      tags:
        - Performance Service
      security:
        - JWT: []
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: id
          required: true
          in: query
          description: >-
            Unique identifier (MongoDB ObjectId) of the application/API record
            to delete. This ID specifies which application should be permanently
            removed from the system. The deletion process includes removing all
            associated data such as run history, performance metrics, test
            results, configuration settings, and any related integrations while
            ensuring data integrity across the platform.
          example: 507f1f77bcf86cd799439011
          schema:
            pattern: ^[0-9a-fA-F]{24}$
            minLength: 24
            maxLength: 24
      responses:
        '200':
          description: ''
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          description: >-
            Unique identifier (MongoDB ObjectId) of the application/API record
            to save and run. This ID specifies which application should be
            updated with the provided data and then scheduled for execution. The
            operation combines configuration updates with immediate scheduling
            of performance testing, security analysis, and compliance validation
            processes.
          example: 507f1f77bcf86cd799439011
          schema:
            pattern: ^[0-9a-fA-F]{24}$
            minLength: 24
            maxLength: 24
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/all:
    get:
      operationId: AppsController_findAll
      summary: List All Applications
      description: >-
        Retrieves a paginated list of all applications/APIs registered in the
        performance service for the authenticated organization. Supports
        filtering, sorting, and pagination to efficiently browse through large
        datasets. Returns essential information about each application including
        status, performance metrics, and last run details.
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: false
          in: query
          description: >-
            Field name to sort the applications by. Specifies which property
            should be used for ordering the results. Available options include
            "createdOn" for sorting by creation date. The sorting behavior can
            be combined with sortOrder parameter to control ascending or
            descending order.
          example: createdOn
          schema:
            enum:
              - createdOn
            type: string
        - name: sortOrder
          required: false
          in: query
          description: >-
            Sort order direction for the results. Determines whether the
            applications should be returned in ascending (ASC) or descending
            (DESC) order based on the sortBy field. DESC will show the most
            recent items first when sorting by creation date.
          example: DESC
          schema:
            default: DESC
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: Applications list retrieved successfully with pagination metadata
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/ai-logs:
    get:
      operationId: AppsController_GetAILogs
      parameters:
        - name: id
          required: true
          in: query
          description: >-
            Unique identifier (MongoDB ObjectId) of the AI log record to
            retrieve. This ID is used to fetch specific AI-generated logs
            associated with API performance analysis, including validation
            errors, insights, and recommendations generated by the AI engine
            during API testing and analysis. The logs contain detailed
            information about performance bottlenecks, security issues, and
            optimization suggestions.
          example: 507f1f77bcf86cd799439011
          schema:
            pattern: ^[0-9a-fA-F]{24}$
            minLength: 24
            maxLength: 24
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          description: >-
            Unique identifier (MongoDB ObjectId) of the application to retrieve
            run history for. This parameter specifies which application's
            execution history should be returned, including all previous test
            runs, performance analyses, status changes, and timestamps. The
            history includes both successful and failed runs with detailed
            execution logs and performance metrics.
          example: 507f1f77bcf86cd799439011
          schema:
            pattern: ^[0-9a-fA-F]{24}$
            minLength: 24
            maxLength: 24
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Run'
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          description: >-
            Unique identifier (MongoDB ObjectId) of the application/API to
            schedule for execution. This ID specifies which application should
            be queued for performance testing and analysis. The scheduling
            process includes validation of the API specification, configuration
            of testing parameters, resource allocation, and queuing for
            execution by the performance engine with appropriate priority and
            timing.
          example: 507f1f77bcf86cd799439011
          schema:
            pattern: ^[0-9a-fA-F]{24}$
            minLength: 24
            maxLength: 24
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/api-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/api-score:
    get:
      operationId: AppsController_getApiScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/performance-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
      tags:
        - Performance Service
      security:
        - JWT: []
  /api/v1/org-users:
    get:
      operationId: OrgUsersController_getUsers
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/org-users/get_users_orgs:
    get:
      operationId: OrgUsersController_getChildOrgs
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/runs/endpoints:
    get:
      operationId: RunsController_getEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/runs/previous-endpoints:
    get:
      operationId: RunsController_getPreviousEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/runs/next-endpoints:
    get:
      operationId: RunsController_getNextEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/endpoints-global:
    get:
      operationId: GlobalEndpointPerformancesController_getGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/endpoints-global/previous:
    get:
      operationId: GlobalEndpointPerformancesController_getPreviousGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/endpoints-global/next:
    get:
      operationId: GlobalEndpointPerformancesController_getnextGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/integration/emails:
    put:
      operationId: IntegrationEmailsController_updateEmailNotification
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationEmailDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: IntegrationEmailsController_getEmailNotification
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIntegrationEmailDto'
  /api/v1/integration/emails/governance-email:
    put:
      operationId: IntegrationEmailsController_updateGovernanceEmailNotification
      parameters:
        - name: email
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/integration/emails/Governance-email:
    get:
      operationId: IntegrationEmailsController_getGovernanceEmailNotification
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/integration/slacks:
    put:
      operationId: IntegrationSlacksController_createSlackIntegration
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationSlackDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: IntegrationSlacksController_getSlackIntegration
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/integration/slacks/test:
    post:
      operationId: IntegrationSlacksController_send
      parameters: []
      responses:
        '201':
          description: ''
  /api/v1/integration/github/create:
    put:
      operationId: GithubIntegrationController_createGithubIntegration
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGithubIntegrationDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/integration/github:
    get:
      operationId: GithubIntegrationController_getGithubIntegration
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/auths:
    post:
      operationId: AuthenticationsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthenticationDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAuthenticationDto'
    put:
      operationId: AuthenticationsController_update
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthenticationsDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: AuthenticationsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    delete:
      operationId: AuthenticationsController_remove
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/auths/validate:
    post:
      operationId: AuthenticationsController_validate
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthenticationsDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/auths/{catalog_id}:
    get:
      operationId: AuthenticationsController_findAllByCatalogId
      parameters:
        - name: catalog_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/auths/single:
    get:
      operationId: AuthenticationsController_findOne
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/default-reports:
    get:
      operationId: DefaultReportController_GetDefaultReport
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/default-reports/previous:
    get:
      operationId: DefaultReportController_getPreviousDefaultReport
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/default-reports/next:
    get:
      operationId: DefaultReportController_getNextDefaultReport
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/b2-c:
    get:
      operationId: B2CController_getbusinessToCustomer
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/b2-c/previous:
    get:
      operationId: B2CController_getPreviousGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run/b2-c/next:
    get:
      operationId: B2CController_getnextGlobalEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/integration/jira/create:
    put:
      operationId: IntegrationJiraController_createIntegrationJira
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationJiraDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/integration/jira:
    get:
      operationId: IntegrationJiraController_getIntegrationJira
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/issues/performance/performance-issues:
    get:
      operationId: PerformanceIssueController_getGlobalEndpoints
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/performance/single-issue:
    get:
      operationId: PerformanceIssueController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/orgs/saveChanges:
    post:
      operationId: OrgsController_saveChanges
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/orgs/my:
    get:
      operationId: OrgsController_getMyOrg
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/orgs/make_child_org:
    post:
      operationId: OrgsController_makeChildOrg
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/orgs/make_org:
    post:
      operationId: OrgsController_makeOrg
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTest'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTest'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/test-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
  /api/v1/test-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppTest'
  /api/v1/test-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/test-service/apps/ai-logs:
    get:
      operationId: AppsController_GetAILogs
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppDto'
  /api/v1/test-service/apps/api-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-service/apps/api-score:
    get:
      operationId: AppsController_getApiScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-service/apps/endpoints:
    get:
      operationId: AppsController_getEndpoints
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-service/apps/testIssues:
    get:
      operationId: AppsController_GetTestIssues
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test_Run'
  /api/v1/test/runs/endpoints:
    get:
      operationId: DasRunsController_getEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/issues/test/test-issues:
    get:
      operationId: TestIssueController_getGlobalEndpoints
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/test/single-issue:
    get:
      operationId: TestIssueController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/users/me:
    get:
      operationId: UsersController_getMe
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/users/{id}:
    get:
      operationId: UsersController_getUserById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/users/update:
    post:
      operationId: UsersController_updateUser
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/users/post-login:
    post:
      operationId: UsersController_postLogin
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserDto'
  /api/v1/users/invite:
    post:
      operationId: UsersController_inviteUsers
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/users/resend-invite:
    post:
      operationId: UsersController_resendInviteUsers
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/users/remove-user-access:
    post:
      operationId: UsersController_removeUser
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/score-stats:
    get:
      operationId: OrgScoreStatsController_getScoreStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/run:
    post:
      operationId: WeeklyReportController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWeeklyReportDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/run/weekly-report:
    get:
      operationId: WeeklyReportController_getReport
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/certifications/getperfapis:
    post:
      operationId: CertificationsController_findAll
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/certifications/getapitests:
    post:
      operationId: CertificationsController_findAllApiTests
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/certifications/orgDetails:
    post:
      operationId: CertificationsController_findOrgDetails
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/issues/test-plan/test-plan-service-issues:
    get:
      operationId: TestPlanServiceIssuesController_getGlobalEndpoints
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/test-plan/single-issue:
    get:
      operationId: TestPlanServiceIssuesController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/test-plan-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestPlanDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestPlanDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestPlanDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-plan-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestPlanDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestPlanDto'
  /api/v1/test-plan-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestPlanDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestPlan'
  /api/v1/test-plan-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateTestPlanDto'
  /api/v1/test-plan-service/apps/ai-logs:
    get:
      operationId: AppsController_GetAILogs
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-plan-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test_Plan_Run'
  /api/v1/test-plan-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTestPlanDto'
  /api/v1/test-plan-service/apps/api-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/test-plan-service/apps/api-score:
    get:
      operationId: AppsController_getApiScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-plan-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
  /api/v1/test-plan-service/apps/endpoints:
    get:
      operationId: AppsController_getEndpoints
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/test-plan/runs/endpoints:
    get:
      operationId: TestPlanRunsController_getEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/api-catalog/apps/create-run:
    post:
      operationId: ApiCatalogController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiCatalogDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/service-ids/{catalogId}:
    get:
      operationId: ApiCatalogController_getServiceIds
      parameters:
        - name: catalogId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/create-run-extension:
    post:
      operationId: ApiCatalogController_createRunAppExtension
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiCatalogDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/create-run-multiple:
    post:
      operationId: ApiCatalogController_createRunAppMultiple
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSpecsDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/schedule-run-multiple:
    post:
      operationId: ApiCatalogController_scheduleRunMultiple
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRunMultipleDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/all_service_run_status:
    get:
      operationId: ApiCatalogController_getAllServicesRunStatus
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/get-url-response:
    get:
      operationId: ApiCatalogController_getOpenApiUrlContent
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/api-catalog/apps/default-email:
    get:
      operationId: ApiCatalogController_findDefaultEmail
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/api-catalog/apps/all:
    get:
      operationId: ApiCatalogController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/summary/{id}:
    get:
      operationId: ApiCatalogController_findSingleAppSummary
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/statuses/{id}:
    get:
      operationId: ApiCatalogController_findSingleAppStatuses
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/api-catalog/apps/all-service-data:
    get:
      operationId: ApiCatalogController_findAllServiceData
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps:
    put:
      operationId: ApiCatalogController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiCatalogDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: ApiCatalogController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCatalog'
    delete:
      operationId: ApiCatalogController_deleteAppById
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/health:
    get:
      operationId: ApiCatalogController_health
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/catalog_id_name_label:
    get:
      operationId: ApiCatalogController_getCatalogIdNameLabel
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/catalog_id_name_label/{id}:
    get:
      operationId: ApiCatalogController_getCatalogIdNameLabelById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/get-run-report:
    get:
      operationId: ApiCatalogController_getRunReport
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/api-catalog/apps/send-consolidated-report:
    get:
      operationId: ApiCatalogController_sendConsolidatedReport
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/privacy/sensitive-data/{id}:
    get:
      operationId: PrivacyController_getSensitiveData
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/design-analysis-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDesignAnalysisDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDesignAnalysisDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDesignAnalysisDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignAnalysis'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/design-analysis-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDesignAnalysisDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDesignAnalysisDto'
  /api/v1/design-analysis-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDesignAnalysisDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignAnalysis'
  /api/v1/design-analysis-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/design-analysis-service/apps/getIssues:
    get:
      operationId: AppsController_findIssuesById
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: status
          required: true
          in: query
          schema:
            enum:
              - Open
              - Dismissed
            type: string
      responses:
        '200':
          description: ''
  /api/v1/design-analysis-service/apps/ai-logs:
    get:
      operationId: AppsController_GetAILogs
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Das_Run'
  /api/v1/design-analysis-service/apps/org-categories:
    get:
      operationId: AppsController_findOrgCategories
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/design-analysis-service/apps/design-template:
    get:
      operationId: AppsController_findDesignTemplate
      parameters: []
      responses:
        '200':
          description: ''
    patch:
      operationId: AppsController_patchDesignTemplate
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDesignTemplateDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignTemplate'
  /api/v1/design-analysis-service/apps/update-category-status:
    patch:
      operationId: AppsController_updateOrgCategoryStatus
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryStatusDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/api-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/api-score:
    get:
      operationId: AppsController_getApiScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/design-analysis-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: number
  /api/v1/design-analysis-service/apps/endpoints:
    get:
      operationId: AppsController_getEndpoints
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
        - name: run_number
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/design-analysis-service/apps/find-app-categories:
    get:
      operationId: AppsController_findAppCategories
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppCategories'
  /api/v1/design-analysis-service/apps/update-app-category:
    put:
      operationId: AppsController_updateAppCategory
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppCategoryDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/update-issue-status:
    patch:
      operationId: AppsController_updateIssueStatus
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueStatusDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/{id}:
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignAnalysis'
  /api/v1/design-analysis-service/apps/das-item/{appId}/{dasId}:
    get:
      operationId: AppsController_getSingleDasItem
      parameters:
        - name: appId
          required: true
          in: path
          schema:
            type: string
        - name: dasId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/design-analysis-service/apps/org/issues:
    get:
      operationId: AppsController_findOrgIssues
      parameters:
        - name: cursor
          required: false
          in: query
          schema:
            type: string
        - name: limit
          required: false
          in: query
          schema:
            minimum: 1
            type: number
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: searchQuery
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/issues/design-analysis/design-issues:
    get:
      operationId: DesignIssueController_getDesignIssues
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/design-analysis/single-issue:
    get:
      operationId: DesignIssueController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/reports/all:
    get:
      operationId: ReportsController_getAllReports
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/reports/one:
    get:
      operationId: ReportsController_getOneReports
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/reports/download:
    get:
      operationId: ReportsController_getReportFile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/reports/download-by-app:
    get:
      operationId: ReportsController_getReportFileByAppId
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/reports/file:
    get:
      operationId: ReportsController_getReportFileById
      parameters:
        - name: _id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/reports/delete-reports:
    get:
      operationId: ReportsController_deleteReports
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/reports/chat-pdf:
    post:
      operationId: ReportsController_getChatsPdf
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-usage/{org_id}:
    get:
      operationId: AiUsageController_findOne
      parameters:
        - name: org_id
          required: true
          in: path
          schema:
            type: string
        - name: year
          required: true
          in: query
          schema:
            type: number
        - name: month
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionManagementDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVersionManagementDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionManagementDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionManagement'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionManagement'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionManagementDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVersionManagementDto'
  /api/v1/version-management-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVersionManagementDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionManagement'
  /api/v1/version-management-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/contract-all:
    get:
      operationId: AppsController_contractFindAll
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVersionManagementDto'
  /api/v1/version-management-service/apps/api-version:
    get:
      operationId: AppsController_GetAppVersion
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/api-versions:
    get:
      operationId: AppsController_GetAppVersions
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/api-version-by-catalogId:
    get:
      operationId: AppsController_findApiVersionByCatalogId
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/api_version_download_yaml:
    get:
      operationId: AppsController_downloadReleaseLogsYaml
      parameters:
        - name: _id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/version-management-service/apps/changelog:
    get:
      operationId: AppsController_GetChangelog
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/versionChangelog:
    get:
      operationId: AppsController_VersionChangeLog
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/version-management-service/apps/exactVersion:
    get:
      operationId: AppsController_ExactVersion
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: version
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/endpoints:
    get:
      operationId: AppsController_endpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/version-management-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VmsRun'
  /api/v1/version-management-service/apps/endpoint-score:
    get:
      operationId: AppsController_getEndpointScore
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/version-management-service/apps/stable-stats:
    get:
      operationId: AppsController_getApiStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/week-changes:
    get:
      operationId: AppsController_getWeekChanges
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/bulk-update-release-policy:
    put:
      operationId: AppsController_bulkUpdateReleasePolicy
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/update-version-number:
    post:
      operationId: AppsController_updateVersionNumber
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVersionNumberDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/send-release:
    post:
      operationId: AppsController_sendRelease
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReleaseDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/version-management-service/apps/download-release-report:
    get:
      operationId: AppsController_getReleaseReportDownload
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/version-management-service/apps/download-html-release-report:
    get:
      operationId: AppsController_downloadHtmlReleaseReport
      parameters:
        - name: appId
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/issues/vms-service/vms-issues:
    get:
      operationId: VmsIssueController_getGlobalEndpoints
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/issues/vms-service/single-issue:
    get:
      operationId: VmsIssueController_getSingleIssue
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps:
    post:
      operationId: AppsController_createApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensitiveDataDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSensitiveDataDto'
    put:
      operationId: AppsController_UpdateApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensitiveDataDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveData'
    get:
      operationId: AppsController_GetApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveData'
    delete:
      operationId: AppsController_deleteAppById
      parameters:
        - name: catalog_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/v1/sensitive-data-service/apps/create-run:
    post:
      operationId: AppsController_createRunApp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensitiveDataDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSensitiveDataDto'
  /api/v1/sensitive-data-service/apps/save-run:
    put:
      operationId: AppsController_SaveAndRunApp
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSensitiveDataDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SensitiveData'
  /api/v1/sensitive-data-service/apps/all:
    get:
      operationId: AppsController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/schedule-run:
    post:
      operationId: AppsController_appRun
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: type
          required: true
          in: query
          schema:
            type: string
        - name: categoryProfile
          required: true
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunDetails'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/endpoints:
    get:
      operationId: AppsController_endpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/spec-endpoints:
    get:
      operationId: AppsController_specEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/endpoint-piis:
    get:
      operationId: AppsController_getEndpointPIIS
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
        - name: org_id
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/download-issues-report:
    get:
      operationId: AppsController_getIssuesReportDownload
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
        - name: org_id
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/download-issues-report-security:
    get:
      operationId: AppsController_getSecurityIssuesReportDownload
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
        - name: org_id
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/download-sensitive-data:
    get:
      operationId: AppsController_getEndpointPIISDownload
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
        - name: org_id
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/download-non-sensitive-data:
    get:
      operationId: AppsController_getEndpointNonPIISDownload
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
        - name: org_id
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/issues:
    get:
      operationId: AppsController_getIssues
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    post:
      operationId: AppsController_postIssues
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/rbac_map:
    get:
      operationId: AppsController_getRBACMap
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/update_rbac_map:
    put:
      operationId: AppsController_putRBACMap
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/app_issues:
    get:
      operationId: AppsController_getAppIssues
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/app_issues_security:
    get:
      operationId: AppsController_getAppIssuesSecurity
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/org_issues:
    get:
      operationId: AppsController_getOrgIssues
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/org_issues_security:
    get:
      operationId: AppsController_getOrgIssuesSecurity
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/org_issues_ids:
    get:
      operationId: AppsController_getOrgIssueIds
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/app-secure-endpoints:
    get:
      operationId: AppsController_getAppSecureEndpoints
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/issues-single:
    get:
      operationId: AppsController_getSingleIssue
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/issues-single-update:
    patch:
      operationId: AppsController_updateSingleIssue
      parameters:
        - name: _id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/create-custom-issue:
    post:
      operationId: AppsController_createCustomIssue
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/all-issues-ids:
    get:
      operationId: AppsController_getAllIssueIDs
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/all-issues-ids-security:
    get:
      operationId: AppsController_getAllIssueIDsSecurity
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - method
              - path
              - risk
              - severity
              - type
              - privacy
              - owasp
              - label
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: false
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-summary-count:
    get:
      operationId: AppsController_getSummaryCount
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-owasp-data:
    get:
      operationId: AppsController_getOwaspData
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/endpoint-nonpiis:
    get:
      operationId: AppsController_getEndpointNonPIIS
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            enum:
              - impact
              - severity
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: source
          required: true
          in: query
          schema:
            type: string
        - name: distinct
          required: true
          in: query
          schema:
            type: boolean
        - name: org_id
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/endpoint-stats:
    get:
      operationId: AppsController_getEndpointStats
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/field-logs:
    post:
      operationId: AppsController_getFieldLogs
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldLogsDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/runhistory:
    get:
      operationId: AppsController_GetRunHistory
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SdsRun'
  /api/v1/sensitive-data-service/apps/tags-count:
    get:
      operationId: AppsController_getTagsCount
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/compliant-apps-count:
    get:
      operationId: AppsController_getCompliantAppCount
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/week-changes:
    get:
      operationId: AppsController_getWeekChanges
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/updateImpactStatus:
    put:
      operationId: AppsController_updateImpactStatus
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateImpactStatusDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/updateStatus:
    put:
      operationId: AppsController_updateStatus
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/dismiss-issue:
    patch:
      operationId: AppsController_dismissIssue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissEndpointIssueDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/restore-issue:
    patch:
      operationId: AppsController_restoreIssue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissEndpointIssueDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/dismiss-issue-endpoints:
    patch:
      operationId: AppsController_dismissIssueEndpoints
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissPartialEndpointsIssueDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/dismiss-app-issue:
    patch:
      operationId: AppsController_dismissAppIssue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DismissAppIssueDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-dismissed-issues:
    get:
      operationId: AppsController_getDismissedIssues
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-dismissed-issues-security:
    get:
      operationId: AppsController_getDismissedIssuesSecurity
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-dismissed-issues-ids:
    get:
      operationId: AppsController_getDismissedIssuesIDs
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-dismissed-issues-ids-security:
    get:
      operationId: AppsController_getDismissedIssuesSecurityIDs
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/dismissed-issues-single:
    get:
      operationId: AppsController_getSingleClosedIssue
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-error-flags:
    get:
      operationId: AppsController_getErrorFlags
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-policy-urls:
    get:
      operationId: AppsController_getPolicyUrls
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-fields:
    get:
      operationId: AppsController_getFields
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-endpoint-schema:
    get:
      operationId: AppsController_getEndpointSchema
      parameters:
        - name: endpoint_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/remove-fields:
    patch:
      operationId: AppsController_removeFields
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFieldsDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-test-cases:
    get:
      operationId: AppsController_getTestCases
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: testType
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-test-cases-ids:
    get:
      operationId: AppsController_getTestCasesID
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: testType
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-test-plan:
    get:
      operationId: AppsController_getTestPlan
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/generate_sensitive_data_reports:
    post:
      operationId: AppsController_generateSensitiveDataReports
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/create-issue:
    post:
      operationId: AppsController_createIssue
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIssueDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/update-endpoint-stats:
    post:
      operationId: AppsController_updateEndpointStats
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-endpoint-stats:
    get:
      operationId: AppsController_getEndpointRunStats
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: category
          required: false
          in: query
          schema:
            type: string
        - name: path
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/get-log-ids-stats:
    get:
      operationId: AppsController_getEndpointLogsIdsRunStats
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: category
          required: false
          in: query
          schema:
            type: string
        - name: path
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/single-stats/{id}:
    get:
      operationId: AppsController_getLogById
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/coverage_details/{app_id}:
    get:
      operationId: AppsController_getCoverageDetails
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/update-issue-severity:
    patch:
      operationId: AppsController_updateIssueSeverity
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIssueSeverityDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/save-ai-logs:
    post:
      operationId: AppsController_generateAILogs
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/sensitive-data-service/apps/save-vulnerability-analysis:
    post:
      operationId: AppsController_saveVulnerabilityAnalysis
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-ai-logs:
    get:
      operationId: AppsController_getStreamAILogs
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/get-ai-stats:
    get:
      operationId: AppsController_getAIStats
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/sensitive-data-service/apps/issues/all-by-org:
    get:
      operationId: AppsController_getAllIssuesByOrg
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/sensitive-data-service/apps/issues/by-app:
    get:
      operationId: AppsController_getIssuesByApp
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-validated-fields:
    post:
      operationId: AIValidatedFieldsController_createField
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAIValidatedFieldDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIValidatedFields'
  /api/v1/ai-validated-fields/app/{appId}:
    get:
      operationId: AIValidatedFieldsController_getAllFieldsByApp
      parameters:
        - name: appId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AIValidatedFields'
  /api/v1/ai-validated-fields/bulk:
    post:
      operationId: AIValidatedFieldsController_bulkCreateFields
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateAIValidatedFieldDto'
      responses:
        '201':
          description: ''
  /storage/dropbox_sso:
    post:
      operationId: StorageController_dropboxSSO
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /storage/save_dropbox:
    post:
      operationId: StorageController_saveDropbox
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/save_dropbox_fields:
    post:
      operationId: StorageController_saveDropboxFields
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/get_dropbox_user:
    get:
      operationId: StorageController_getDropboxUser
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/revoke_dropbox_access:
    post:
      operationId: StorageController_revokeDropboxAccess
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/get_google_drive:
    get:
      operationId: StorageController_getGoogleDrive
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/google_drive_sso:
    post:
      operationId: StorageController_googleDriveSSO
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/save_google_drive:
    post:
      operationId: StorageController_saveGoogleDrive
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/save_google_drive_fields:
    post:
      operationId: StorageController_saveGoogleDriveFields
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/revoke_google_drive_access:
    post:
      operationId: StorageController_revokeGoogleDriveAccess
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/one_drive_sso:
    post:
      operationId: StorageController_oneDriveSSO
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
  /storage/save_one_drive:
    post:
      operationId: StorageController_saveOneDrive
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/get_one_drive:
    get:
      operationId: StorageController_getOneDrive
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/revoke_one_drive_access:
    post:
      operationId: StorageController_revokeOneDriveAccess
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /storage/save_one_drive_fields:
    post:
      operationId: StorageController_saveOneDriveFields
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /notification:
    get:
      operationId: NotificationController_getNotification
      parameters: []
      responses:
        '200':
          description: ''
    delete:
      operationId: NotificationController_deleteNotification
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /notification/all:
    delete:
      operationId: NotificationController_deleteAllNotification
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /notification/status:
    patch:
      operationId: NotificationController_updateNotificationStatus
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/category:
    post:
      operationId: TestCategoryController_SecurityCategories
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCategoryDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: TestCategoryController_UpdateSecurityCategories
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCategoryDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: TestCategoryController_getSingleSecurityCategory
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/category/all/{TestCategoryVisibility}:
    get:
      operationId: TestCategoryController_getDefaultCategories
      parameters:
        - name: TestCategoryVisibility
          required: true
          in: path
          schema:
            type: string
        - name: visibility
          required: false
          in: query
          schema:
            type: string
        - name: types
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - Model
                - Policy
                - Action
        - name: statuses
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - Draft
                - Live
        - name: services
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - SENSITIVE_DATA
                - SPEC_VALIDATION
        - name: severities
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: tags
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: string
        - name: pageSize
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/category/category_profile_map:
    get:
      operationId: TestCategoryController_getTestCategoryProfileMap
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/category/spec_validation_profile_map:
    get:
      operationId: TestCategoryController_getSpecValidationProfileMap
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/apigateway/create-account:
    post:
      operationId: ApiGatewayController_createAccount
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiGatewayAccDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/update-account:
    post:
      operationId: ApiGatewayController_updateAccount
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiGatewayAccDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/get-accounts:
    get:
      operationId: ApiGatewayController_getAccounts
      parameters:
        - name: gateway
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/apigateway/get-account:
    get:
      operationId: ApiGatewayController_getAccountById
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/get-apis:
    get:
      operationId: ApiGatewayController_getApis
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/get-specs:
    post:
      operationId: ApiGatewayController_getSpecs
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSpecsDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/apigateway/delete-account:
    delete:
      operationId: ApiGatewayController_deleteAccount
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigateway/refresh-apigee-token:
    patch:
      operationId: ApiGatewayController_refreshApigeeAccountToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApiGatewayAccDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/apigee-auth-service/apps/test-connection:
    get:
      operationId: ApigeeAuthController_testConnection
      parameters:
        - name: clientId
          required: true
          in: query
          schema:
            type: string
        - name: clientSecret
          required: true
          in: query
          schema:
            type: string
        - name: redirectUri
          required: true
          in: query
          schema:
            type: string
        - name: apiKey
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/apigee-auth-service/apps/oauth2callback:
    get:
      operationId: ApigeeAuthController_oauth2Callback
      parameters:
        - name: code
          required: true
          in: query
          schema:
            type: string
        - name: state
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/aws-auth-service/apps/test-connection:
    post:
      operationId: AwsAuthController_testConnection
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestConnectionDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/mulesoft-auth-service/apps/test-connection:
    post:
      operationId: MulesoftAuthController_testConnection
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestConnectionDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/kong-auth-service/apps/test-connection:
    post:
      operationId: KongAuthController_testConnection
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestConnectionDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/runs/aiLog-ids-list:
    get:
      operationId: RunsController_getRunList
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/spec-validation/app/by-catalog/{catalog_id}:
    get:
      operationId: SpecValidationController_getAppByCatalogId
      parameters:
        - name: catalog_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/spec-validation/app/{app_id}:
    get:
      operationId: SpecValidationController_getApp
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/spec-validation/apps:
    get:
      operationId: SpecValidationController_getApps
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/spec-validation/issues/{spec_validation_id}:
    get:
      operationId: SpecValidationController_getAllIssues
      parameters:
        - name: spec_validation_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecValidationIssues'
  /api/v1/spec-validation/issue/{issue_id}:
    get:
      operationId: SpecValidationController_getIssue
      parameters:
        - name: issue_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecValidationIssues'
  /api/v1/spec-validation/schedule-run/{spec_validation_id}:
    post:
      operationId: SpecValidationController_createRunApp
      parameters:
        - name: spec_validation_id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRunDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/spec-validation/issues:
    post:
      operationId: SpecValidationController_postIssues
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/spec-validation/graphs/issues-by-type:
    get:
      operationId: SpecValidationController_getIssuesByEndpoint
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/spec-validation/dashboard/graphs/issues-by-type:
    get:
      operationId: SpecValidationController_getDashboardIssuesByType
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: environment
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/spec-validation/graphs/stable-unstable-apis:
    get:
      operationId: SpecValidationController_getStableUnstableAPIs
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/spec-validation/graphs/issues-trend:
    get:
      operationId: SpecValidationController_getIssuesTrend
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/spec-validation/test/cases:
    post:
      operationId: SpecValidationController_postTestCases
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/spec-validation/test/{testId}:
    get:
      operationId: SpecValidationController_getTestCase
      parameters:
        - name: testId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecValidationTest'
  /api/v1/spec-validation/tests/{spec_validation_id}:
    get:
      operationId: SpecValidationController_getAllITestCases
      parameters:
        - name: spec_validation_id
          required: true
          in: path
          schema:
            type: string
        - name: search
          required: true
          in: query
          schema:
            type: string
        - name: cursor
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
        - name: page
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
  /api/v1/spec-validation/AllTests/{spec_validation_id}:
    get:
      operationId: SpecValidationController_getAllITestCasesFailedPass
      parameters:
        - name: spec_validation_id
          required: true
          in: path
          schema:
            type: string
        - name: search
          required: true
          in: query
          schema:
            type: string
        - name: cursor
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
  /api/v1/spec-validation/runs/{spec_validation_id}:
    get:
      operationId: SpecValidationController_getRuns
      parameters:
        - name: spec_validation_id
          required: true
          in: path
          schema:
            type: string
        - name: cursor
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
  /api/v1/ai-agent/registration/chats/{catalog_id}:
    get:
      operationId: PerfAiAgentController_getChats
      parameters:
        - name: catalog_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent:
    delete:
      operationId: PerfAiAgentController_deleteState
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/register-api:
    post:
      operationId: PerfAiAgentController_registerAPI
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/registration/chat/stream/{catalog_id}:
    get:
      operationId: PerfAiAgentController_streamChat
      parameters:
        - name: catalog_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/tasks:
    get:
      operationId: PerfAiAgentController_getTasks
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/ai-agent/app/stream:
    get:
      operationId: PerfAiAgentController_streamAppChat
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/app/chats:
    post:
      operationId: PerfAiAgentController_createAppChat
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/app/chat/{chat_id}:
    get:
      operationId: PerfAiAgentController_getAppChats
      parameters:
        - name: chat_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/app/chat/{chat_id}/state:
    get:
      operationId: PerfAiAgentController_getChatState
      parameters:
        - name: chat_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/app/chat/{chat_id}/recover:
    post:
      operationId: PerfAiAgentController_recoverChatState
      parameters:
        - name: chat_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/app/chat/{chat_id}/websocket-context:
    get:
      operationId: PerfAiAgentController_getWebSocketContext
      parameters:
        - name: chat_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/app/chats/{catalog_id}:
    get:
      operationId: PerfAiAgentController_getAllAppChats
      parameters:
        - name: catalog_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/ai-agent/app/chat/{id}:
    delete:
      operationId: PerfAiAgentController_deleteAppState
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/home/stream:
    get:
      operationId: PerfAiAgentController_streamHomeChat
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/home/chats:
    get:
      operationId: PerfAiAgentController_getHomeChats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/ai-agent/home/chat:
    delete:
      operationId: PerfAiAgentController_deleteHomeState
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/mcp-proxy/tools:
    get:
      operationId: McpProxyController_listTools
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/mcp-proxy/tools/{toolName}:
    get:
      operationId: McpProxyController_getTool
      parameters:
        - name: toolName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/mcp-proxy/tools/{toolName}/execute:
    post:
      operationId: McpProxyController_executeTool
      parameters:
        - name: toolName
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/mcp-proxy/health:
    get:
      operationId: McpProxyController_healthCheck
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/auth/health:
    get:
      operationId: AuthController_healthCheck
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/auth/token:
    post:
      operationId: AuthController_getToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTokenDto'
      responses:
        '201':
          description: ''
  /api/v1/auth/refresh:
    post:
      operationId: AuthController_getTokensFromJwt
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponseDto'
  /api/v1/auth/token/refresh:
    post:
      operationId: AuthController_refreshToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponseDto'
  /dashboard/issues_by_severity:
    get:
      operationId: DashboardController_getIssuesPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/active_issues_by_severity:
    get:
      operationId: DashboardController_getActiveIssuesPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_dismissed_issues_by_severity:
    get:
      operationId: DashboardController_getDismissedIssuesBySeverity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_blocked_issues_by_severity:
    get:
      operationId: DashboardController_getBlockedIssuesBySeverity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_active_vs_closed_issues:
    get:
      operationId: DashboardController_getActiveVsCloseIssues
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_api_catalog_per_week:
    get:
      operationId: DashboardController_getApiCatalogPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_endpoints_per_week:
    get:
      operationId: DashboardController_getTotalEndpointsPerWeek
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: environment
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_registered_apis_per_week:
    get:
      operationId: DashboardController_getRegisteredApisPerWeek
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: environment
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_design_issues_per_week:
    get:
      operationId: DashboardController_getTotalDesignIssuesPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/tests-summary:
    get:
      operationId: DashboardController_getTestCaseSummary
      parameters:
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: environment
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_vms_per_week:
    get:
      operationId: DashboardController_getTotalVmsPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/get_marketplace_models_per_week:
    get:
      operationId: DashboardController_getMarketplacePerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/sensitive_data_per_week:
    get:
      operationId: DashboardController_getSensitiveDataPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/total_tests_per_week:
    get:
      operationId: DashboardController_getTotalTestsPerWeek
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/total_runs_per_week:
    get:
      operationId: DashboardController_getTotalRunsPerWeek
      parameters:
        - name: weeks
          required: true
          in: query
          schema:
            type: string
        - name: id
          required: true
          in: query
          schema:
            type: string
        - name: environment
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/top_leaky_apis:
    get:
      operationId: DashboardController_getTopLeakyApis
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/top_leaks_by_type:
    get:
      operationId: DashboardController_getTopLeakTypes
      parameters:
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/security/top_leaks_by_type:
    get:
      operationId: DashboardController_getTopLeakTypesSecurity
      parameters:
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/top_leaks_by_category:
    get:
      operationId: DashboardController_getTopLeakCategory
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/open_issues_with_severity_and_type:
    get:
      operationId: DashboardController_getOpenIssuesWithSeverityAndType
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/all_issues_all_closed:
    get:
      operationId: DashboardController_getAllIssuesVsCloseIssues
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/sensitive-data-stats:
    get:
      operationId: DashboardController_getSensitiveDataStats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /dashboard/all_savings:
    get:
      operationId: DashboardController_getAllSavings
      parameters: []
      responses:
        '200':
          description: ''
  /dashboard/security/all_issues_all_closed:
    get:
      operationId: DashboardController_getAllIssuesVsCloseIssuesSecurity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/todo-tasks:
    get:
      operationId: TodoTasksController_getTodoTasks
      parameters: []
      responses:
        '200':
          description: ''
    delete:
      operationId: TodoTasksController_deleteAllTodoTasks
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/learned_models/endpoints/{app_id}:
    get:
      operationId: LearnedModelsController_getEndpoints
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
        - name: search
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/learned_models/endpoint:
    put:
      operationId: LearnedModelsController_saveChanges
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateEndpointRequestDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint'
  /api/v1/learned_models/learn/{app_id}:
    post:
      operationId: LearnedModelsController_learnEndpoints
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
        - name: api_type
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
  /api/v1/learned_models/unlearned-variables/{app_id}:
    get:
      operationId: LearnedModelsController_getUnlearnedVariables
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
        - name: search
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /chain-execution/register-and-execute:
    post:
      operationId: ChainExecutionController_registerAndExecuteChain
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAndExecuteDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainExecutionResponseDto'
  /chain-execution/execute:
    post:
      operationId: ChainExecutionController_executeChain
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteChainDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainExecutionResponseDto'
  /chain-execution/chain/{chain_execution_id}:
    get:
      operationId: ChainExecutionController_getChainExecution
      parameters:
        - name: chain_execution_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/tasks:
    get:
      operationId: TasksController_findOldestPendingTask
      parameters:
        - name: worker_id
          required: true
          in: query
          schema:
            type: string
        - name: taskType
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/tasks/{task_id}:
    post:
      operationId: TasksController_saveResult
      parameters:
        - name: task_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/tasks/abort/{app_id}:
    post:
      operationId: TasksController_abortLastRun
      parameters:
        - name: app_id
          required: true
          in: path
          schema:
            type: string
        - name: taskType
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/hacker-agent/tasks:
    post:
      operationId: HackerAgentController_createTask
      parameters: []
      responses:
        '201':
          description: ''
    get:
      operationId: HackerAgentController_getUserTasks
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/hacker-agent/status/{taskId}:
    get:
      operationId: HackerAgentController_status
      parameters:
        - name: taskId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/hacker-agent/download/{taskId}:
    get:
      operationId: HackerAgentController_download
      parameters:
        - name: taskId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/hacker-agent/tasks/{taskId}:
    get:
      operationId: HackerAgentController_getTaskDetails
      parameters:
        - name: taskId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: HackerAgentController_deleteTask
      parameters:
        - name: taskId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/services/run:
    post:
      operationId: IntegrationsController_scheduleRunMultiple
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRunMultipleDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/services/status:
    get:
      operationId: IntegrationsController_getAllServicesRunStatus
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/dsr-service/create:
    post:
      operationId: DSRRequestController_createRequest
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDsrRequestDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DSRRequests'
  /api/v1/dsr-service/verify-email:
    post:
      operationId: DSRRequestController_verifyEmail
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/dsr-service/resolve-request:
    patch:
      operationId: DSRRequestController_resolveRequest
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolveRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/dsr-service/app-requests:
    get:
      operationId: DSRRequestController_findAll
      parameters:
        - name: page
          required: false
          in: query
          description: >-
            Page number for pagination (1-based indexing). Specifies which page
            of results to retrieve from the paginated dataset. Must be a
            positive integer starting from 1.
          example: 1
          schema:
            minimum: 1
            default: 1
            type: number
        - name: pageSize
          required: false
          in: query
          description: >-
            Number of items per page for pagination. Controls how many records
            are returned in a single page response. Must be a positive integer
            with a reasonable upper limit to prevent performance issues.
          example: 20
          schema:
            minimum: 1
            maximum: 100
            default: 20
            type: number
        - name: appId
          required: false
          in: query
          schema:
            type: string
        - name: sortBy
          required: true
          in: query
          schema:
            type: string
        - name: sortOrder
          required: true
          in: query
          schema:
            enum:
              - ASC
              - DESC
            type: string
      responses:
        '200':
          description: ''
  /api/v1/dsr-service/app-requests-single:
    get:
      operationId: DSRRequestController_findSingle
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/dsr-service/app-requests-edit:
    patch:
      operationId: DSRRequestController_findApptoEdit
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/dsr-service/agent:
    post:
      operationId: DSRRequestController_processInput
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: string
    get:
      operationId: DSRRequestController_getChats
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    delete:
      operationId: DSRRequestController_deleteState
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/agents:
    get:
      operationId: AgentsController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    post:
      operationId: AgentsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
  /api/v1/category/ai-agent:
    post:
      operationId: TestCategoryAgentController_handleChat
      summary: Create Test Category via AI Agent
      description: >-
        Initiates a conversation with the test category AI agent to create a new
        test category. The agent processes natural language input to generate
        appropriate test categories based on the provided requirements,
        leveraging AI capabilities to understand intent and create comprehensive
        test category specifications.
      parameters: []
      responses:
        '201':
          description: Test category created successfully
        '400':
          description: Invalid input provided
      tags:
        - Test Category AI Agent
      security:
        - JWT: []
  /api/v1/category/ai-agent/{agent_thread_id}:
    get:
      operationId: TestCategoryAgentController_getChats
      summary: Retrieve Chat History for Test Category Agent
      description: >-
        Retrieves the chat conversation history for a specific test category
        agent thread. This endpoint returns all messages and interactions that
        have occurred within the specified agent thread, including user inputs
        and AI responses related to test category generation and management.
      parameters:
        - name: agent_thread_id
          required: true
          in: path
          description: >-
            Unique identifier for the AI agent conversation thread associated
            with a specific test category. This ID represents a persistent
            conversation session where users interact with the AI agent to
            create, modify, or discuss test categories. The thread maintains
            context across multiple interactions and allows for continuation of
            conversations. Must be a valid string identifier that uniquely
            identifies the agent thread within the organization scope.
          example: tc_thread_507f1f77bcf86cd799439011
          schema:
            type: string
            minLength: 1
            maxLength: 100
            pattern: ^[a-zA-Z0-9_-]+$
      responses:
        '200':
          description: Chat history retrieved successfully
        '404':
          description: Agent thread not found or access denied
      tags:
        - Test Category AI Agent
      security:
        - JWT: []
  /api/v1/category/ai-agent/chat/stream/{agent_thread_id}:
    get:
      operationId: TestCategoryAgentController_streamChat
      summary: Stream Chat with Test Category Agent
      description: >-
        Establishes a Server-Sent Events (SSE) stream for real-time
        communication with the test category AI agent. This endpoint allows
        users to send messages and receive streaming responses from the AI agent
        as it processes test category requests, enabling a real-time
        conversational experience with immediate feedback.
      parameters:
        - name: agent_thread_id
          required: true
          in: path
          description: >-
            Unique identifier for the AI agent conversation thread associated
            with a specific test category. This ID represents a persistent
            conversation session where users interact with the AI agent to
            create, modify, or discuss test categories. The thread maintains
            context across multiple interactions and allows for continuation of
            conversations. Must be a valid string identifier that uniquely
            identifies the agent thread within the organization scope.
          example: tc_thread_507f1f77bcf86cd799439011
          schema:
            type: string
            minLength: 1
            maxLength: 100
            pattern: ^[a-zA-Z0-9_-]+$
      responses:
        '200':
          description: Streaming connection established successfully
        '404':
          description: Agent thread not found or access denied
      tags:
        - Test Category AI Agent
      security:
        - JWT: []
  /api/v1/database/ai-agent:
    post:
      operationId: TestDatabaseAgentController_handleChat
      summary: Create Test Database via AI Agent
      description: >-
        Initiates a conversation with the test datanase AI agent to create a new
        test datanase. The agent processes natural language input to generate
        appropriate test categories based on the provided requirements,
        leveraging AI capabilities to understand intent and create comprehensive
        test datanase specifications.
      parameters: []
      responses:
        '201':
          description: Test database created successfully
        '400':
          description: Invalid input provided
      tags:
        - Test Database AI Agent
      security:
        - JWT: []
  /api/v1/database/ai-agent/{agent_thread_id}:
    get:
      operationId: TestDatabaseAgentController_getChats
      summary: Retrieve Chat History for Test Database Agent
      description: >-
        Retrieves the chat conversation history for a specific test database
        agent thread. This endpoint returns all messages and interactions that
        have occurred within the specified agent thread, including user inputs
        and AI responses related to test database generation and management.
      parameters:
        - name: agent_thread_id
          required: true
          in: path
          description: >-
            Unique identifier for the AI agent conversation thread associated
            with a specific test database. This ID represents a persistent
            conversation session where users interact with the AI agent to
            create, modify, or discuss test categories. The thread maintains
            context across multiple interactions and allows for continuation of
            conversations. Must be a valid string identifier that uniquely
            identifies the agent thread within the organization scope.
          example: tc_thread_507f1f77bcf86cd799439011
          schema:
            type: string
            minLength: 1
            maxLength: 100
            pattern: ^[a-zA-Z0-9_-]+$
      responses:
        '200':
          description: Chat history retrieved successfully
        '404':
          description: Agent thread not found or access denied
      tags:
        - Test Database AI Agent
      security:
        - JWT: []
  /api/v1/database/ai-agent/chat/stream/{agent_thread_id}:
    get:
      operationId: TestDatabaseAgentController_streamChat
      summary: Stream Chat with Test Database Agent
      description: >-
        Establishes a Server-Sent Events (SSE) stream for real-time
        communication with the test database AI agent. This endpoint allows
        users to send messages and receive streaming responses from the AI agent
        as it processes test database requests, enabling a real-time
        conversational experience with immediate feedback.
      parameters:
        - name: agent_thread_id
          required: true
          in: path
          description: >-
            Unique identifier for the AI agent conversation thread associated
            with a specific test database. This ID represents a persistent
            conversation session where users interact with the AI agent to
            create, modify, or discuss test categories. The thread maintains
            context across multiple interactions and allows for continuation of
            conversations. Must be a valid string identifier that uniquely
            identifies the agent thread within the organization scope.
          example: tc_thread_507f1f77bcf86cd799439011
          schema:
            type: string
            minLength: 1
            maxLength: 100
            pattern: ^[a-zA-Z0-9_-]+$
      responses:
        '200':
          description: Streaming connection established successfully
        '404':
          description: Agent thread not found or access denied
      tags:
        - Test Database AI Agent
      security:
        - JWT: []
  /api/v1/database:
    post:
      operationId: TestDatabaseController_SecurityCategories
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestDatabaseDTO'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: TestDatabaseController_UpdateSecurityCategories
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestDatabaseDTO'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    get:
      operationId: TestDatabaseController_getSingleSecurityDatabase
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /api/v1/database/all/{TestDatabaseVisibility}:
    get:
      operationId: TestDatabaseController_getDefaultCategories
      parameters:
        - name: TestDatabaseVisibility
          required: true
          in: path
          schema:
            type: string
        - name: visibility
          required: false
          in: query
          schema:
            type: string
        - name: domains
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: types
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - Model
                - Policy
                - Action
        - name: statuses
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - Draft
                - Live
        - name: services
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - SENSITIVE_DATA
                - SPEC_VALIDATION
        - name: severities
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: tags
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: standards
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
        - name: search
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: string
        - name: pageSize
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /api/v1/database/database_profile_map:
    get:
      operationId: TestDatabaseController_getTestDatabaseProfileMap
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/database/spec_validation_profile_map:
    get:
      operationId: TestDatabaseController_getSpecValidationProfileMap
      parameters: []
      responses:
        '200':
          description: ''
  /mongodb-compass/databases:
    get:
      operationId: MongoDbCompassController_getDatabases
      parameters: []
      responses:
        '200':
          description: ''
  /mongodb-compass/collections:
    get:
      operationId: MongoDbCompassController_getCollections
      parameters:
        - name: database
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /mongodb-compass/collections/{collectionName}/documents:
    get:
      operationId: MongoDbCompassController_getDocuments
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
        - name: page
          required: true
          in: query
          schema:
            type: number
        - name: limit
          required: true
          in: query
          schema:
            type: number
        - name: filter
          required: true
          in: query
          schema:
            type: string
        - name: sort
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
    post:
      operationId: MongoDbCompassController_createDocument
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /mongodb-compass/collections/{collectionName}/documents/{documentId}:
    get:
      operationId: MongoDbCompassController_getDocument
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
        - name: documentId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
    put:
      operationId: MongoDbCompassController_updateDocument
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
        - name: documentId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
    delete:
      operationId: MongoDbCompassController_deleteDocument
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
        - name: documentId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /mongodb-compass/collections/{collectionName}/bulk:
    post:
      operationId: MongoDbCompassController_bulkOperations
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '201':
          description: ''
  /mongodb-compass/collections/{collectionName}/aggregate:
    post:
      operationId: MongoDbCompassController_aggregate
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /mongodb-compass/collections/{collectionName}/indexes:
    get:
      operationId: MongoDbCompassController_getIndexes
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      operationId: MongoDbCompassController_createIndex
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
  /mongodb-compass/collections/{collectionName}/indexes/{indexName}:
    delete:
      operationId: MongoDbCompassController_dropIndex
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
        - name: indexName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
  /mongodb-compass/collections/{collectionName}/search:
    get:
      operationId: MongoDbCompassController_searchDocuments
      parameters:
        - name: collectionName
          required: true
          in: path
          schema:
            type: string
        - name: q
          required: true
          in: query
          schema:
            type: string
        - name: limit
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /adaptive-learning/insights:
    post:
      operationId: AdaptiveLearningController_createInsight
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInsightDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insight'
    get:
      operationId: AdaptiveLearningController_getInsights
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Insight'
  /adaptive-learning/resolve-params:
    post:
      operationId: AdaptiveLearningController_resolveParams
      parameters: []
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
  /adaptive-learning/endpoints-with-params:
    get:
      operationId: AdaptiveLearningController_getEndpointsWithParams
      parameters:
        - name: app_id
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /api/v1/oauth/auth-check:
    get:
      operationId: TokenController_checkAuthentication
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/oauth/token:
    post:
      operationId: TokenController_exchangeToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenExchangeDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthTokenResponseDto'
  /api/v1/oauth/refresh:
    post:
      operationId: TokenController_refreshToken
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthTokenResponseDto'
info:
  title: PerfAI Dashboard API
  description: PerfAI Dashboard API
  version: '1.0'
  contact: {}
tags:
  - name: API
    description: ''
servers: []
components:
  schemas:
    LatestRun:
      type: object
      properties:
        status:
          type: string
        ai_coverage_percentage:
          type: number
        top_10_coverage:
          type: number
        score:
          type: number
        api_name:
          type: string
        total_endpoints:
          type: number
        total_fail:
          type: number
        total_high:
          type: number
        total_medium:
          type: number
        total_low:
          type: number
        run_number:
          type: number
        validation_erros:
          type: string
        latency:
          type: number
        region:
          type: string
      required:
        - status
        - ai_coverage_percentage
        - top_10_coverage
        - score
        - api_name
        - total_endpoints
        - total_fail
        - total_high
        - total_medium
        - total_low
        - run_number
        - validation_erros
        - latency
        - region
    CreateAppDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        cron:
          type: string
        testRegion:
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          enum:
            - STANDARD
            - GET
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        aiLearnPolicy:
          enum:
            - STANDARD
            - RELEARN
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    BuildDetailsDto:
      type: object
      properties:
        commitId:
          type: string
        commitUrl:
          type: string
        commitUsername:
          type: string
        commitDate:
          type: string
        repoName:
          type: string
        comment:
          type: string
      required:
        - commitId
        - commitUrl
        - commitUsername
        - commitDate
        - repoName
    App:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        testRegion:
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - PRO
          type: string
        performance:
          default: High-Performance
          enum:
            - High-Performance
            - Medium-Performance
            - Low-Performance
          type: string
        coveragePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - GET
          type: string
        aiLearnPolicy:
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        catalog_id:
          type: string
        modified_on:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - org_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - catalog_id
        - modified_on
    Run:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    CreateIntegrationEmailDto:
      type: object
      properties:
        org_id:
          type: string
        email_list:
          type: string
        active:
          type: boolean
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - email_list
        - active
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    CreateIntegrationSlackDto:
      type: object
      properties:
        org_id:
          type: string
        token:
          type: string
        channel:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - token
        - channel
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    CreateGithubIntegrationDto:
      type: object
      properties:
        org_id:
          type: string
        username:
          type: string
        repo:
          type: string
        token:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - username
        - repo
        - token
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    CreateAuthenticationDto:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
        body:
          type: string
        headers:
          type: string
        login_headers:
          type: string
        auth_type:
          type: string
        username:
          type: string
        password:
          type: string
        clientsecret:
          type: string
        clientid:
          type: string
        api_key:
          type: string
        bearer_token:
          type: string
        body_type:
          type: string
        org_id:
          type: string
        status:
          type: boolean
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        privilege:
          type: string
        isEncrypted:
          type: boolean
        selectedToken:
          type: string
        catalog_id:
          type: string
      required:
        - label
    UpdateAuthenticationsDto:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
        body:
          type: string
        headers:
          type: string
        login_headers:
          type: string
        auth_type:
          type: string
        username:
          type: string
        password:
          type: string
        clientsecret:
          type: string
        clientid:
          type: string
        api_key:
          type: string
        bearer_token:
          type: string
        body_type:
          type: string
        org_id:
          type: string
        status:
          type: boolean
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        privilege:
          type: string
        isEncrypted:
          type: boolean
        selectedToken:
          type: string
        catalog_id:
          type: string
    CreateIntegrationJiraDto:
      type: object
      properties:
        org_id:
          type: string
        token:
          type: string
        url:
          type: string
        projectKey:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - token
        - url
        - projectKey
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    AppTest:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        testRegion:
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - GET
          type: string
        aiLearnPolicy:
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    Test_Run:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        nickname:
          type: string
        email_verified:
          type: boolean
        picture:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        invited_on:
          format: date-time
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        joined_on:
          format: date-time
          type: string
        default_org_id:
          type: string
      required:
        - name
        - email
        - nickname
        - email_verified
        - picture
        - created_on
        - created_by
        - invited_on
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
        - joined_on
        - default_org_id
    CreateUserDto:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        nickname:
          type: string
        email_verified:
          type: boolean
        picture:
          type: string
        joined_on:
          format: date-time
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        invited_on:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - name
        - email
        - nickname
        - email_verified
        - picture
        - joined_on
        - created_on
        - created_by
        - invited_on
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    CreateWeeklyReportDto:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        category:
          type: number
        response_time:
          type: number
        run_number:
          type: number
        weekly_average:
          type: number
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
      required:
        - method
        - path
        - category
        - response_time
        - run_number
        - weekly_average
        - org_id
        - app_id
    TPS:
      type: object
      properties:
        category:
          type: string
        is_critical_path:
          type: boolean
        is_pass:
          type: boolean
        method:
          type: string
        priority:
          type: string
        reason:
          type: string
        response_size:
          type: number
        response_status:
          type: string
        response_time:
          type: number
        status:
          type: string
        test_case:
          type: array
          items:
            type: object
        title:
          type: string
      required:
        - test_case
    CreateTestPlanDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        cron:
          type: string
        testRegion:
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          enum:
            - STANDARD
            - GET
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        aiLearnPolicy:
          enum:
            - STANDARD
            - RELEARN
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        tps:
          $ref: '#/components/schemas/TPS'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    TestPlan:
      type: object
      properties:
        openapi_spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        testRegion:
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - PRO
          type: string
        performance:
          default: High-Performance
          enum:
            - High-Performance
            - Medium-Performance
            - Low-Performance
          type: string
        coveragePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - GET
          type: string
        aiLearnPolicy:
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        tps:
          $ref: '#/components/schemas/TPS'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - openapi_spec
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    Test_Plan_Run:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    CreateApiCatalogDto:
      type: object
      properties:
        source:
          type: string
        version:
          type: string
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        runnerType:
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
            - PUBLIC
            - HACKER_AGENT
          type: string
        categoryProfile:
          type: string
        auth:
          type: string
        non_owner_auth:
          type: string
        non_entitled_auth:
          type: string
        low_privilege_auth:
          type: string
        cross_env_auth:
          type: string
        cross_application_auth:
          type: string
        skipAutoRuns:
          type: boolean
        cron:
          type: string
        testRegion:
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          enum:
            - STANDARD
            - GET
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        aiLearnPolicy:
          enum:
            - STANDARD
            - RELEARN
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        governance_email:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        dsr:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        rbac_auths:
          type: array
          items:
            type: string
        api_type:
          type: string
        tenant_one_auths:
          type: array
          items:
            type: string
        tenant_two_auths:
          type: array
          items:
            type: string
        emailConfiguration:
          type: string
        rateLimitRPS:
          type: number
        environment:
          type: string
        accessLevel:
          type: string
          enum:
            - Private
            - Team
      required:
        - org_id
        - governance_email
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    AwsSpecDto:
      type: object
      properties:
        stageName:
          type: string
        restApiId:
          type: string
      required:
        - stageName
        - restApiId
    MuleSoftSpecDto:
      type: object
      properties:
        assetId:
          type: string
        version:
          type: string
      required:
        - assetId
        - version
    ObjectId:
      type: object
      properties: {}
    GetSpecsDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        productIds:
          type: array
          items:
            type: string
        awsRestIds:
          type: array
          items:
            $ref: '#/components/schemas/AwsSpecDto'
        muleSoftIds:
          type: array
          items:
            $ref: '#/components/schemas/MuleSoftSpecDto'
        kongIds:
          type: array
          items:
            $ref: '#/components/schemas/KongSpecDto'
      required:
        - id
    AuthDetailsDto:
      type: object
      properties:
        authenticationUrl:
          type: string
        authenticationBody:
          type: string
        authorizationHeaders:
          type: string
      required:
        - authenticationUrl
        - authenticationBody
        - authorizationHeaders
    ScheduleRunMultipleDto:
      type: object
      properties:
        services:
          type: string
          enum:
            - PRIVACY
            - SECURITY
            - GOVERNANCE
            - RELEASE
            - VERSION
            - CONTRACT
        appId:
          $ref: '#/components/schemas/ObjectId'
        label:
          type: string
        openApiUrl:
          type: string
        basePath:
          type: string
        profile:
          type: string
        runMode:
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        buildMode:
          type: string
          enum:
            - OK
            - TEST
        testAccount1:
          $ref: '#/components/schemas/AuthDetailsDto'
        testAccount2:
          $ref: '#/components/schemas/AuthDetailsDto'
        fail_on_new_leaks:
          type: boolean
          default: true
      required:
        - services
        - appId
        - label
        - openApiUrl
        - basePath
        - profile
        - runMode
        - buildMode
        - fail_on_new_leaks
    GatewayDetails:
      type: object
      properties:
        name:
          type: string
        gateway:
          type: string
      required:
        - name
        - gateway
    ApiCatalog:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        expired_auth:
          type: array
          items:
            type: string
        non_owner_auth:
          type: string
        non_entitled_auth:
          type: object
        low_privilege_auth:
          type: string
        cross_env_auth:
          type: string
        cross_application_auth:
          type: string
        headers:
          type: array
          items:
            type: string
        custom_id:
          type: string
        cron:
          type: string
        testRegion:
          type: string
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
        performancePolicy:
          type: string
          default: STANDARD
          enum:
            - STANDARD
            - PRO
        coveragePolicy:
          type: string
          default: STANDARD
          enum:
            - STANDARD
            - GET
        aiLearnPolicy:
          type: string
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
        schedulePolicy:
          type: string
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        governance_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        isGatewayApi:
          type: boolean
        gatewayDetails:
          $ref: '#/components/schemas/GatewayDetails'
        dsr:
          type: boolean
        midnight_run:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        runnerType:
          type: string
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
            - PUBLIC
            - HACKER_AGENT
        categoryProfile:
          type: string
        rbac_auths:
          type: array
          items:
            type: string
        tenant_one_auths:
          type: array
          items:
            type: string
        tenant_two_auths:
          type: array
          items:
            type: string
        registrationStatus:
          type: string
          enum:
            - PENDING
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - CANCELLED
        api_type:
          type: string
        emailConfiguration:
          type: string
        rateLimitRPS:
          type: number
        skipAutoRuns:
          type: boolean
        environment:
          type: string
        metadata:
          type: object
        accessLevel:
          type: string
        category:
          type: string
      required:
        - org_id
        - created_on
        - created_by
        - created_by_email
        - governance_email
        - modified_by
        - modified_by_email
        - modified_on
    DAS:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        id:
          type: string
        category:
          type: string
        priority:
          type: string
        summary:
          type: string
        remediation:
          type: string
        tag:
          type: string
        status:
          type: object
      required:
        - method
        - path
        - id
        - category
        - priority
        - summary
        - remediation
        - tag
    CreateDesignAnalysisDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        cron:
          type: string
        testRegion:
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          enum:
            - STANDARD
            - PRO
          type: string
        coveragePolicy:
          enum:
            - STANDARD
            - GET
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        aiLearnPolicy:
          enum:
            - STANDARD
            - RELEARN
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        das:
          type: array
          items:
            $ref: '#/components/schemas/DAS'
        totalChecks:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        issues:
          type: number
        non_owner_auth:
          type: string
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    DesignAnalysis:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        auth:
          type: string
        non_owner_auth:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        buildMode:
          type: object
        testRegion:
          default: US_WEST
          enum:
            - US_WEST
            - US_EAST
            - EU_LON
            - ASIA_HYD
          type: string
        performancePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - PRO
          type: string
        performance:
          default: High-Performance
          enum:
            - High-Performance
            - Medium-Performance
            - Low-Performance
          type: string
        coveragePolicy:
          default: STANDARD
          enum:
            - STANDARD
            - GET
          type: string
        aiLearnPolicy:
          default: STANDARD
          enum:
            - STANDARD
            - RELEARN
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        totalChecks:
          type: string
        das:
          type: array
          items:
            $ref: '#/components/schemas/DAS'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        source:
          type: string
        midnight_run:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        registrationStatus:
          enum:
            - PENDING
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - CANCELLED
          type: string
        metadata:
          type: object
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    Mixed:
      type: object
      properties: {}
    Das_Run:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        summary:
          $ref: '#/components/schemas/Mixed'
        actionType:
          type: string
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    UpdateDesignTemplateDto:
      type: object
      properties:
        org_id:
          $ref: '#/components/schemas/ObjectId'
        user_id:
          $ref: '#/components/schemas/ObjectId'
        template:
          type: string
        is_custom:
          type: boolean
      required:
        - org_id
        - user_id
    DesignTemplate:
      type: object
      properties: {}
    UpdateCategoryStatusDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        category_id:
          $ref: '#/components/schemas/ObjectId'
      required:
        - id
        - category_id
    AppCategories:
      type: object
      properties: {}
    UpdateAppCategoryDto:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        active:
          type: boolean
      required:
        - id
        - active
    UpdateIssueStatusDto:
      type: object
      properties:
        app_id:
          $ref: '#/components/schemas/ObjectId'
        id:
          $ref: '#/components/schemas/ObjectId'
      required:
        - app_id
        - id
    CreateVersionManagementDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        cron:
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        auto_release:
          enum:
            - 'ON'
            - 'OFF'
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    META:
      type: object
      properties:
        latest_run:
          $ref: '#/components/schemas/LatestRun'
    VersionManagement:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        label:
          type: string
        source:
          type: string
        version:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        metaData:
          $ref: '#/components/schemas/META'
        auto_release:
          default: 'ON'
          enum:
            - 'ON'
            - 'OFF'
          type: string
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        buildMode:
          type: object
        midnight_run:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        releasePolicy:
          type: string
        releaseCustomDate:
          type: string
        registrationStatus:
          enum:
            - PENDING
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - CANCELLED
          type: string
        metadata:
          type: object
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    VmsRun:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        actionType:
          type: string
        run_number:
          type: number
        isScheduledJob:
          type: boolean
        changesCount:
          type: number
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
        summary:
          $ref: '#/components/schemas/Mixed'
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
      required:
        - org_id
        - app_id
        - status
        - run_number
        - isScheduledJob
        - changesCount
        - created_date
        - next_date
    UpdateVersionNumberDto:
      type: object
      properties:
        appId:
          type: string
        autoRelease:
          type: string
          enum:
            - 'ON'
            - 'OFF'
        semVer:
          type: string
          pattern: /^\d+\.\d+\.\d+$/
        calVer:
          type: string
          pattern: /^\d{4}\.\d{2}\.\d{2}$/
        releasePolicy:
          type: string
        releaseCustomDate:
          type: string
      required:
        - appId
        - autoRelease
        - semVer
        - calVer
        - releasePolicy
        - releaseCustomDate
    SendReleaseDto:
      type: object
      properties:
        appId:
          type: string
      required:
        - appId
    CreateSensitiveDataDto:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        headers:
          type: array
          items:
            type: string
        label:
          type: string
        auth:
          type: string
        low_privilege_auth:
          type: string
        non_entitled_auth:
          type: string
        cross_env_auth:
          type: string
        cross_application_auth:
          type: string
        cron:
          type: string
        schedulePolicy:
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        latestRun:
          $ref: '#/components/schemas/LatestRun'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalFields:
          type: number
        totalEndpoints:
          type: number
        testDataCount:
          type: number
        vulnerabilitiesCount:
          type: number
        totalPiiFieldsFound:
          type: number
        privacyStatus:
          type: string
        non_owner_auth:
          type: string
        dsr:
          type: object
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        skip_endpoints:
          type: string
        key_values:
          type: string
        runnerType:
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
            - PUBLIC
            - HACKER_AGENT
          type: string
        categoryProfile:
          type: string
        rbac_auths:
          type: array
          items:
            type: string
        tenant_one_auths:
          type: array
          items:
            type: string
        tenant_two_auths:
          type: array
          items:
            type: string
        api_type:
          type: string
        rateLimitRPS:
          type: number
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    SensitiveData:
      type: object
      properties:
        openapi_spec:
          type: string
        spec:
          type: string
        base_path:
          type: string
        auth:
          type: string
        non_owner_auth:
          type: string
        expired_auth:
          type: array
          items:
            type: string
        non_entitled_auth:
          type: object
        low_privilege_auth:
          type: string
        cross_env_auth:
          type: string
        cross_application_auth:
          type: string
        dismissedIssues:
          type: array
          items:
            type: string
        issueSeverities:
          $ref: '#/components/schemas/Mixed'
        label:
          type: string
        key_values:
          type: string
        skip_endpoints:
          type: string
        source:
          type: string
        headers:
          type: array
          items:
            type: string
        cron:
          type: string
        mode:
          type: object
        buildMode:
          type: object
        schedulePolicy:
          default: NON_PEAK
          enum:
            - PEAK
            - NON_PEAK
            - PEAK_AND_NON_PEAK
            - NONE
          type: string
        latest_run:
          $ref: '#/components/schemas/LatestRun'
        metaData:
          $ref: '#/components/schemas/META'
        org_id:
          type: string
        catalog_id:
          type: string
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
        created_by_email:
          type: string
        modified_by:
          type: string
        modified_by_email:
          type: string
        modified_on:
          format: date-time
          type: string
        apiName:
          type: string
        totalEndpoints:
          type: number
        privacyStatus:
          type: string
        aiErrorsCount:
          type: number
        issuesCount:
          type: number
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        midnight_run:
          type: boolean
        scheduleType:
          type: string
        excludedServices:
          type: array
          items:
            type: string
        runnerType:
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
            - PUBLIC
            - HACKER_AGENT
          type: string
        categoryProfile:
          type: string
        finalCoverage:
          type: string
        rbac_auths:
          type: array
          items:
            type: string
        registrationStatus:
          enum:
            - PENDING
            - COMPLETED
            - FAILED
            - IN_PROGRESS
            - CANCELLED
          type: string
        api_type:
          type: string
        rateLimitRPS:
          type: number
        metadata:
          type: object
      required:
        - org_id
        - catalog_id
        - created_on
        - created_by
        - created_by_email
        - modified_by
        - modified_by_email
        - modified_on
    RunDetails:
      type: object
      properties:
        categories_to_run:
          type: array
          items:
            type: string
            enum:
              - Authentication_Invalid
              - Authentication_Valid
              - Authorization_Missing
              - Authorization_Invalid
              - Authorization_Expired
              - Authorization_Valid
              - RBAC
              - DB_Read
              - DB_Write
              - BOLA
              - Pagination_Invalid
              - Rate_Limit_Exist
              - Date_Filter_Invalid
              - SSRF
              - Privilege_Escalation
              - CORS_Exist
              - Audit_Data_Tampering
              - Broken_Token_Signature_Verification
              - Broken_Token_Tampered_Payload
              - Monitoring_Endpoint
              - BPLA
              - BTLA
              - BRLA
              - SQL_Injection
              - NOSQL_Injection
              - Cross_Environment_Token_Acceptance
              - Cross_Application_Token_Acceptance
              - Search_Data_Leak
              - Prompt_Injection
              - Broken_Token_Revocation
              - Broken_Logout
        isLocalRun:
          type: boolean
        agent_id:
          type: string
        spec_file_data:
          type: object
        basepath:
          type: string
    FieldLogsDto:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        fieldName:
          type: string
        label:
          type: string
        endpoint_id:
          type: string
      required:
        - method
        - path
        - fieldName
        - label
        - endpoint_id
    ApiContextDto:
      type: object
      properties:
        totalCount:
          type: number
        accessRequiredCount:
          type: number
        learnedCount:
          type: number
        learningRequiredCount:
          type: number
    SdsRun:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        status:
          type: string
        run_number:
          type: number
        summary:
          $ref: '#/components/schemas/Mixed'
        created_date:
          format: date-time
          type: string
        next_date:
          format: date-time
          type: string
        buildDetails:
          $ref: '#/components/schemas/BuildDetailsDto'
        apiStats:
          $ref: '#/components/schemas/ApiContextDto'
        runnerType:
          type: string
          enum:
            - MOCK
            - PERF
            - TEST
            - PRIVACY
            - TEST_MOCK
            - PUBLIC
            - HACKER_AGENT
        actionType:
          type: string
        categories_to_run:
          type: array
          items:
            type: string
            enum:
              - Authentication_Invalid
              - Authentication_Valid
              - Authorization_Missing
              - Authorization_Invalid
              - Authorization_Expired
              - Authorization_Valid
              - RBAC
              - DB_Read
              - DB_Write
              - BOLA
              - Pagination_Invalid
              - Rate_Limit_Exist
              - Date_Filter_Invalid
              - SSRF
              - Privilege_Escalation
              - CORS_Exist
              - Audit_Data_Tampering
              - Broken_Token_Signature_Verification
              - Broken_Token_Tampered_Payload
              - Monitoring_Endpoint
              - BPLA
              - BTLA
              - BRLA
              - SQL_Injection
              - NOSQL_Injection
              - Cross_Environment_Token_Acceptance
              - Cross_Application_Token_Acceptance
              - Search_Data_Leak
              - Prompt_Injection
              - Broken_Token_Revocation
              - Broken_Logout
        metadata:
          type: object
      required:
        - org_id
        - app_id
        - status
        - run_number
        - created_date
        - next_date
    UpdateImpactStatusDto:
      type: object
      properties:
        endpoint_id:
          type: string
        name:
          type: string
        location:
          type: string
      required:
        - endpoint_id
    DismissEndpointIssueDto:
      type: object
      properties:
        endpoint_id:
          type: string
        issue_id:
          type: string
        issue:
          type: string
        endpoint_ids:
          type: array
          items:
            type: string
        comment:
          type: string
        field:
          type: string
        fieldType:
          type: string
      required:
        - endpoint_id
        - issue_id
        - issue
        - endpoint_ids
        - comment
        - field
        - fieldType
    ErroneousEndpoints:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
      required:
        - method
        - path
    DismissPartialEndpointsIssueDto:
      type: object
      properties:
        issue_id:
          type: string
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/ErroneousEndpoints'
      required:
        - issue_id
        - endpoints
    DismissAppIssueDto:
      type: object
      properties:
        app_id:
          type: string
        issue_id:
          type: string
        issue:
          type: string
        comment:
          type: string
        url:
          type: string
        notes:
          type: string
      required:
        - app_id
        - issue_id
        - issue
        - comment
        - url
        - notes
    RemoveFieldsDto:
      type: object
      properties:
        location:
          type: string
          enum:
            - Custom
            - Ignored
        fieldName:
          type: string
      required:
        - location
        - fieldName
    HeadersDto:
      type: object
      properties:
        userAgent:
          type: string
        Referer:
          type: string
    RequestDto:
      type: object
      properties:
        host:
          type: string
        ip:
          type: string
        geolocation:
          type: string
        timestamp:
          type: string
        headers:
          $ref: '#/components/schemas/HeadersDto'
    SsrfDto:
      type: object
      properties:
        token:
          type: string
        request:
          $ref: '#/components/schemas/RequestDto'
    CreateIssueDto:
      type: object
      properties:
        category:
          type: string
        severity:
          type: string
        ssrf:
          $ref: '#/components/schemas/SsrfDto'
    UpdateIssueSeverityDto:
      type: object
      properties:
        issue_id:
          type: string
        severity:
          type: string
          enum:
            - Critical
            - High
            - Medium
            - Low
      required:
        - issue_id
        - severity
    CreateAIValidatedFieldDto:
      type: object
      properties:
        app_id:
          type: string
        field_name:
          type: string
        classification:
          type: string
        isPII:
          type: boolean
        metadata:
          type: object
        type:
          type: string
      required:
        - field_name
        - classification
        - isPII
        - type
    AIValidatedFields:
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/ObjectId'
        created_on:
          format: date-time
          type: string
        app_id:
          type: string
        field_name:
          type: string
        classification:
          type: string
        isPII:
          type: boolean
        metadata:
          type: object
        type:
          type: string
      required:
        - _id
        - app_id
        - field_name
        - classification
        - isPII
        - type
    BulkCreateAIValidatedFieldDto:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/CreateAIValidatedFieldDto'
      required:
        - fields
    TestCategoryDTO:
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
        type:
          type: string
        tags:
          type: array
          items:
            type: string
        severity:
          type: string
        status:
          type: string
        visibility:
          type: string
        hits:
          type: number
        description:
          type: object
        prompt:
          type: string
        user_id:
          $ref: '#/components/schemas/ObjectId'
        modified_by:
          $ref: '#/components/schemas/ObjectId'
        author:
          type: string
        categories:
          type: array
          items:
            type: object
      required:
        - name
        - tags
        - severity
        - status
    CreateApiGatewayAccDto:
      type: object
      properties:
        gateway:
          type: string
          enum:
            - Apigee
            - AWS
            - Mulesoft
            - Kong
        name:
          type: string
        connection_status:
          type: string
        auto_register:
          type: boolean
        apigee:
          type: object
        aws:
          type: object
        mulesoft:
          type: object
        kong:
          type: object
        field1:
          type: string
        field2:
          type: string
        field3:
          type: string
        field4:
          type: string
        field5:
          type: string
        field6:
          type: string
      required:
        - gateway
        - name
        - connection_status
    UpdateApiGatewayAccDto:
      type: object
      properties:
        gateway:
          type: string
          enum:
            - Apigee
            - AWS
            - Mulesoft
            - Kong
        name:
          type: string
        connection_status:
          type: string
        auto_register:
          type: boolean
        apigee:
          type: object
        aws:
          type: object
        mulesoft:
          type: object
        kong:
          type: object
        field1:
          type: string
        field2:
          type: string
        field3:
          type: string
        field4:
          type: string
        field5:
          type: string
        field6:
          type: string
        account_id:
          $ref: '#/components/schemas/ObjectId'
      required:
        - gateway
        - name
        - connection_status
        - account_id
    KongSpecDto:
      type: object
      properties:
        productId:
          type: string
        versionId:
          type: string
        displayName:
          type: string
      required:
        - productId
        - versionId
        - displayName
    TestConnectionDto:
      type: object
      properties:
        accId:
          $ref: '#/components/schemas/ObjectId'
      required:
        - accId
    SpecValidationIssues:
      type: object
      properties:
        name:
          type: string
        method:
          type: string
        path:
          type: string
        org_id:
          type: string
        app_id:
          type: string
        severity:
          enum:
            - BLOCKER
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
          type: string
        metadata:
          type: object
        created_on:
          format: date-time
          type: string
        updated_on:
          format: date-time
          type: string
      required:
        - name
        - method
        - path
        - org_id
        - app_id
        - severity
        - metadata
        - created_on
        - updated_on
    ScheduleRunDTO:
      type: object
      properties:
        categories_to_run:
          type: array
          items:
            type: string
        isLocalRun:
          type: boolean
        agent_id:
          type: string
        spec_file_data:
          type: string
        base_path:
          type: string
      required:
        - categories_to_run
    SpecValidationTest:
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
        bug_title:
          type: string
        method:
          type: string
        path:
          type: string
        org_id:
          $ref: '#/components/schemas/ObjectId'
        app_id:
          $ref: '#/components/schemas/ObjectId'
        status:
          type: string
        status_code:
          type: number
        execution_time_ms:
          type: number
        severity:
          type: string
          enum:
            - BLOCKER
            - CRITICAL
            - HIGH
            - MEDIUM
            - LOW
            - NA
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
        created_on:
          format: date-time
          type: string
      required:
        - name
        - display_name
        - bug_title
        - method
        - path
        - org_id
        - app_id
        - status
        - status_code
        - execution_time_ms
        - severity
        - tags
        - metadata
        - created_on
    GetTokenDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    TokenResponseDto:
      type: object
      properties:
        id_token:
          type: string
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: number
      required:
        - id_token
        - access_token
        - refresh_token
        - token_type
        - expires_in
    RefreshTokenDto:
      type: object
      properties:
        refresh_token:
          type: string
      required:
        - refresh_token
    Params:
      type: object
      properties:
        name:
          type: string
        in_:
          type: string
        required:
          type: boolean
        type:
          type: string
        format:
          type: string
        default_:
          type: string
        description:
          type: string
        values:
          type: array
          items:
            type: string
        value:
          type: string
        enums:
          type: array
          items:
            type: string
        reqSchema:
          type: string
        resSchema:
          type: string
        schema:
          type: object
      required:
        - name
        - in_
        - required
        - type
        - format
        - default_
        - description
        - values
        - value
        - enums
        - reqSchema
        - resSchema
    Match:
      type: object
      properties:
        reqPath:
          type: string
        reqType:
          type: string
        resEndpoint:
          $ref: '#/components/schemas/Endpoint'
        resPath:
          type: string
        resType:
          type: string
        location:
          type: object
      required:
        - reqPath
        - reqType
        - resEndpoint
        - resPath
        - resType
        - location
    Issue:
      type: object
      properties:
        method:
          type: string
        path:
          type: string
        category:
          type: string
        id:
          type: string
        changeType:
          type: string
          enum:
            - MAJOR
            - MINOR
            - PATCH
            - NONE
        priority:
          type: string
          enum:
            - HIGH
            - MEDIUM
            - LOW
        remediation:
          type: string
        tag:
          type: string
      required:
        - method
        - path
        - category
        - id
        - changeType
        - priority
        - remediation
        - tag
    Endpoint:
      type: object
      properties:
        _id:
          type: object
          default: null
        method:
          type: string
        summary:
          type: string
        operationId:
          type: string
        basePath:
          type: string
        path:
          type: string
        security:
          type: object
        queryParams:
          type: array
          items:
            $ref: '#/components/schemas/Params'
        pathParams:
          type: array
          items:
            $ref: '#/components/schemas/Params'
        headerParams:
          type: array
          items:
            $ref: '#/components/schemas/Params'
        url:
          type: string
        urls:
          default: []
          type: array
          items:
            type: string
        optionalParamUrls:
          default: []
          type: array
          items:
            type: string
        headers:
          type: array
          items:
            type: string
        errors:
          type: boolean
        statusCodes:
          type: array
          items:
            type: number
        enums:
          type: array
          items:
            type: string
        requestSchema:
          type: object
        responseSchema:
          type: object
        responseSchemas:
          type: object
        matches:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/Match'
        body:
          type: object
        bodies:
          type: array
          items:
            type: object
        status:
          type: number
          default: 0
        statuses:
          default: []
          type: array
          items:
            type: number
        learnStatus:
          default: NON_WORKING
          enum:
            - WORKING
            - NON_WORKING
            - SKIPPED
            - LEARNED
            - UNLEARNED
          type: string
        learnReason:
          type: string
          default: ''
        response:
          type: object
        score:
          type: number
          default: 0
        app_id:
          type: string
          default: ''
        create_date:
          format: date-time
          type: string
          default: 2025-10-28T04:05:39.450Z
        modified_date:
          format: date-time
          type: string
          default: 2025-10-28T04:05:39.450Z
        extra:
          type: boolean
          default: false
        id:
          type: string
          default: ''
        category:
          type: string
          default: ''
        test_case:
          type: string
          default: ''
        issues:
          default: []
          type: array
          items:
            $ref: '#/components/schemas/Issue'
        resourceName:
          type: string
          default: ''
        headersToOverwrite:
          default: []
          type: array
          items:
            type: string
      required:
        - _id
        - method
        - summary
        - operationId
        - basePath
        - path
        - security
        - queryParams
        - pathParams
        - headerParams
        - url
        - urls
        - optionalParamUrls
        - headers
        - errors
        - statusCodes
        - enums
        - requestSchema
        - responseSchema
        - responseSchemas
        - matches
        - body
        - bodies
        - status
        - statuses
        - learnStatus
        - learnReason
        - response
        - score
        - app_id
        - create_date
        - modified_date
        - extra
        - id
        - test_case
        - issues
        - headersToOverwrite
    CreateUpdateEndpointRequestDTO:
      type: object
      properties:
        sensitive_data_id:
          type: string
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        spec:
          type: string
        fields_to_update:
          type: object
          properties:
            body:
              required: true
              type: object
            url:
              required: true
              type: string
            headers:
              required: true
              type: object
        api_id:
          type: string
        base_path:
          type: string
        endpoint_id:
          type: string
      required:
        - sensitive_data_id
        - endpoint
        - spec
        - fields_to_update
    RegisterAndExecuteDto:
      type: object
      properties:
        spec_url:
          type: string
        api_name:
          type: string
        base_path:
          type: string
        chat_id:
          type: string
        label:
          type: string
        governance_email:
          type: string
        auth:
          type: object
        non_owner_auth:
          type: object
        low_privilege_auth:
          type: object
        non_entitled_auth:
          type: object
        rbac_auths:
          type: array
          items:
            type: object
        cross_env_auth:
          type: object
        cross_application_auth:
          type: object
        key_values:
          type: object
        api_type:
          type: string
        metadata:
          type: object
      required:
        - spec_url
        - api_name
    ChainExecutionResponseDto:
      type: object
      properties:
        chain_execution_id:
          type: string
        catalog_id:
          type: string
        status:
          type: string
        created_at:
          format: date-time
          type: string
        total_steps:
          type: number
        current_step:
          type: string
      required:
        - chain_execution_id
        - status
        - created_at
        - total_steps
    ServiceChainStepDto:
      type: object
      properties:
        step_id:
          type: string
        service:
          type: object
        mode:
          type: object
        execution_order:
          type: number
        is_critical:
          type: boolean
        metadata:
          type: object
        enabled:
          type: boolean
      required:
        - step_id
        - service
        - execution_order
    ChainConfigurationDto:
      type: object
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/ServiceChainStepDto'
        base_metadata:
          type: object
      required:
        - steps
    ExecuteChainDto:
      type: object
      properties:
        catalog_id:
          type: string
        chain_config:
          $ref: '#/components/schemas/ChainConfigurationDto'
        base_metadata:
          type: object
      required:
        - catalog_id
        - chain_config
    CreateDsrRequestDto:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        otp:
          type: string
        phoneNumber:
          type: string
        regulation:
          type: string
        identifier:
          type: string
        reason:
          type: string
        country:
          type: string
        type:
          type: string
        email:
          type: string
        name:
          type: string
        details:
          type: string
        deleteInfo:
          type: boolean
          default: true
      required:
        - org_id
        - app_id
        - otp
        - type
        - email
        - name
    DSRRequests:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        regulation:
          type: string
        country:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        identifier:
          type: string
        org_name:
          type: string
        app_name:
          type: string
        details:
          type: string
        reason:
          type: string
        assignedTo:
          type: string
        dueDate:
          format: date-time
          type: string
        comment:
          type: string
        catalog_id:
          type: string
        app_id:
          type: string
        org_id:
          type: string
        status:
          type: object
        created_on:
          format: date-time
          type: string
        created_by:
          type: string
      required:
        - name
        - type
        - email
        - catalog_id
        - app_id
        - org_id
        - created_on
        - created_by
    VerifyEmailDto:
      type: object
      properties:
        org_id:
          type: string
        app_id:
          type: string
        email:
          type: string
      required:
        - org_id
        - app_id
        - email
    ResolveRequestDto:
      type: object
      properties:
        request_id:
          type: string
        comment:
          type: string
      required:
        - request_id
    CreateAgentDto:
      type: object
      properties:
        agent_id:
          type: string
        ip_address:
          type: string
        created_by:
          type: string
      required:
        - agent_id
        - ip_address
    Agent:
      type: object
      properties:
        agent_id:
          type: string
        ip_address:
          type: string
        created_by:
          type: string
    TestDatabaseDTO:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        name:
          type: string
        display_name:
          type: string
        business_friendly_title:
          type: string
        type:
          type: string
        domain:
          type: string
        category:
          type: string
        entity:
          type: string
        endpoint:
          type: string
        endpoint_pattern:
          type: string
        method:
          type: array
          items:
            type: string
        source_title:
          type: string
        source_spec:
          type: string
        tag:
          type: string
        keywords:
          type: array
          items:
            type: string
        data_strategy:
          type: string
        locale:
          type: string
        sensitivity:
          type: string
        test-category:
          type: string
        rule:
          type: object
        preconditions:
          type: object
        input_payload_template:
          type: object
        expected_result:
          type: object
        assertions:
          type: object
        tags:
          type: array
          items:
            type: string
        standards:
          type: array
          items:
            type: string
        severity:
          type: string
        status:
          type: string
        visibility:
          type: string
        hits:
          type: number
        description:
          type: object
        prompt:
          type: string
        user_id:
          $ref: '#/components/schemas/ObjectId'
        modified_by:
          $ref: '#/components/schemas/ObjectId'
        author:
          type: string
        categories:
          type: array
          items:
            type: object
      required:
        - title
        - name
        - domain
        - tags
        - severity
        - status
    CreateInsightDto:
      type: object
      properties:
        endpoint:
          type: string
        environment:
          type: string
        capturedAt:
          type: string
        insights:
          type: object
        app_id:
          type: string
      required:
        - endpoint
        - environment
        - capturedAt
        - insights
    Insight:
      type: object
      properties: {}
    TokenExchangeDto:
      type: object
      properties:
        code:
          type: string
        redirect_uri:
          type: string
        code_verifier:
          type: string
      required:
        - code
        - redirect_uri
    OAuthTokenResponseDto:
      type: object
      properties:
        access_token:
          type: string
        id_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: number
        scope:
          type: string
      required:
        - access_token
        - token_type
        - expires_in
    TokenRefreshDto:
      type: object
      properties:
        refresh_token:
          type: string
      required:
        - refresh_token
